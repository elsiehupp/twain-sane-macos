{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11904\paperh16835\margl1440\margr1440\vieww9020\viewh7500\viewkind0
\pard\qc

\f0\b\fs28 \cf0 SANE \'d1 Introduction\
\pard\qj

\f1\b0\fs24 \cf0 \
SANE stands for \'d2Scanner Access Now Easy\'d3 and is an application programming interface (API) that provides standardized access to any raster image scanner hardware (flatbed scanner, hand-held scanner, video- and still-cameras, frame-grabbers, etc.). The {\field{\*\fldinst{HYPERLINK "http://www.sane-project.org/html/"}}{\fldrslt SANE API}} is public domain and its discussion and development is open to everybody. The current source code is written for UNIX (including GNU/Linux) and is available under the GNU General Public License (the SANE API is available to proprietary applications and backends as well, however). More details about the license can be found on {\field{\*\fldinst{HYPERLINK "http://www.sane-project.org/license.html"}}{\fldrslt our license page}}. Ports to MacOS X, OS/2 and Microsoft Windows are either already done or in progress.\
\
SANE is a universal scanner interface. The value of such a universal interface is that it allows writing just one driver per image acquisition device rather than one driver for each device and application. So, if you have three applications and four devices, traditionally you\'d5d have had to write 12 different programs. With SANE, this number is reduced to seven: the three applications plus the four drivers. Of course, the savings get even bigger as more and more drivers and/or applications are added.\
\
Not only does SANE reduce development time and code duplication, it also raises the level at which applications can work. As such, it will enable applications that were previously unheard of in the UNIX world. While SANE is primarily targeted at a UNIX environment, the standard has been carefully designed to make it possible to implement the API on virtually any hardware or operating system.\
\
While SANE is an acronym for \'d2Scanner Access Now Easy\'d3 the hope is of course that SANE is indeed sane in the sense that it will allow easy implementation of the API while accommodating all features required by today\'d5s scanner hardware and applications. Specifically, SANE should be broad enough to accommodate devices such as scanners, digital still and video cameras, as well as virtual devices like image file filters.\
\
If you\'d5re familiar with {\field{\*\fldinst{HYPERLINK "http://www.twain.org/"}}{\fldrslt TWAIN}}, you may wonder why there is a need for SANE. Simply put, TWAIN does not separate the user-interface from the driver of a device. This, unfortunately, makes it difficult, if not impossible, to provide network transparent access to image acquisition devices (which is useful if you have a LAN full of machines, but scanners connected to only one or two machines; it\'d5s obviously also useful for remote-controlled cameras and such). It also means that any particular TWAIN driver is pretty much married to a particular GUI API (be it Win32 or the Mac API). In contrast, SANE cleanly separates device controls from their representation in a user-interface. As a result, SANE has no difficulty supporting command-line driven interfaces or network-transparent scanning. For these reasons, it is unlikely that there will ever be a SANE backend that can talk to a TWAIN driver. The converse is no problem though: it is pretty straight forward to access SANE devices through a TWAIN source. In summary, if TWAIN had been just a little better designed, there would have been no reason for SANE to exist, but things being the way they are, TWAIN simply isn\'d5t SANE.\
\
This package includes the command line frontend scanimage, the saned server and the sane-find-scanner utility, along with their documentation.}